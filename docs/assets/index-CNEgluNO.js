import{passAlongProps as E,html as x}from"https://esm.sh/gh/jeff-hykin/elemental@0.6.5/main/deno.js";import{randomNormal as S}from"https://esm.sh/gh/jeff-hykin/good-js@42aa6e1/source/flattened/random_normal.js";(function(){let e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(let t of document.querySelectorAll('link[rel="modulepreload"]'))s(t);new MutationObserver(t=>{for(let o of t)if(o.type==="childList")for(let r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function n(t){let o={};return t.integrity&&(o.integrity=t.integrity),t.referrerPolicy&&(o.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?o.credentials="include":t.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(t){if(t.ep)return;t.ep=!0;let o=n(t);fetch(t.href,o)}})();const P={red:"#E06C75",blue:"#61AFEF",orange:"#D19A66",yellow:"#E5C07B",purple:"#C678DD",green:"#04d895",white:"#f5f5f5",black:"#383838",gray:"#666666"};function I(i,e){i=i.replace(/^#/,"");let n=parseInt(i.substring(0,2),16),s=parseInt(i.substring(2,4),16),t=parseInt(i.substring(4,6),16);return n=Math.min(255,Math.floor(n+(255-n)*e)),s=Math.min(255,Math.floor(s+(255-s)*e)),t=Math.min(255,Math.floor(t+(255-t)*e)),`#${((1<<24)+(n<<16)+(s<<8)+t).toString(16).slice(1).toUpperCase()}`}function N(i,e,n){i=i.replace(/^#/,""),e=e.replace(/^#/,"");const s=parseInt(i.substring(0,2),16),t=parseInt(i.substring(2,4),16),o=parseInt(i.substring(4,6),16),r=parseInt(e.substring(0,2),16),a=parseInt(e.substring(2,4),16),l=parseInt(e.substring(4,6),16),c=Math.round(s+n*(r-s)),g=Math.round(t+n*(a-t)),h=Math.round(o+n*(l-o));return`#${((1<<24)+(c<<16)+(g<<8)+h).toString(16).slice(1).toUpperCase()}`}const{red:m,blue:f,orange:$,yellow:j,purple:O,green:D,white:Y,black:w,gray:M}=P;function k(i){const e=Math.max(0,Math.min(1,i/.9));return N(f,m,e)}function C(i,e,n){const s=(e.x-n.x)**2+(e.y-n.y)**2;if(s===0)return Math.hypot(i.x-e.x,i.y-e.y);let t=((i.x-e.x)*(n.x-e.x)+(i.y-e.y)*(n.y-e.y))/s;t=Math.max(0,Math.min(1,t));const o={x:e.x+t*(n.x-e.x),y:e.y+t*(n.y-e.y)};return Math.hypot(i.x-o.x,i.y-o.y)}function b({ctx:i,x:e,y:n,angle:s,size:t,thickness:o,color:r=w}){i.beginPath(),i.moveTo(e,n),i.lineTo(e-t*Math.cos(s-Math.PI/6),n-t*Math.sin(s-Math.PI/6)),i.lineTo(e-t*Math.cos(s+Math.PI/6),n-t*Math.sin(s+Math.PI/6)),i.lineTo(e,n),i.closePath(),i.strokeStyle=r,i.fillStyle=r,i.lineWidth=o,i.fill(),i.stroke()}function y(i){return i<-1?i=-1:i>1?i=1:i<=0?N(m,f,(i+1)**2/1):N(D,f,1-i)}class A{constructor({defaultNodeData:e={pulse:!1,spikeThreshold:1,energy:.1,energyDecayRate:.1,isFiringNext:!1,stableEnergyLevel:.1,energyAfterFiring:0,radius:25},defaultEdgeData:n={edgeStrength:1,strengthNoiseParameters:{mean:0,std:.1}}}){this.nodes=new Map,this.edges=new Map,this.defaultNodeData=e,this.defaultEdgeData=n}newNode({x:e,y:n,...s}){const t=Date.now().toString();return this.nodes.set(t,{x:e,y:n,id:t,...this.defaultNodeData,...s}),t}newEdge({fromId:e,toId:n,strength:s=1}){const t=`${e}-${n}`;return this.edges.set(t,{from:e,to:n,strength:s,...this.defaultEdgeData}),t}manuallySpike(e){const n=this.nodes.get(e);n&&(n.energy=n.spikeThreshold,n.isFiringNext=!0)}next(){const e=Array.from(this.nodes.values()),n={};for(let s of e)if(s.isFiringNext){for(const t of this.edges.values())if(t.from===s.id){const o=this.nodes.get(t.to);if(o){n[o.id]=n[o.id]||0;let r=t.strength;if(t.strengthNoiseParameters){const a=S(t.strengthNoiseParameters);r+=a}n[o.id]+=r}}}for(let s of e)s.isFiringNext&&(s.energy=s.energyAfterFiring,s.isFiringNext=!1);for(const[s,t]of Object.entries(n)){const o=this.nodes.get(s);o&&(o.energy+=t)}for(let s of e)s.energy>=s.spikeThreshold&&(s.isFiringNext=!0);for(let s of e)s.isFiringNext||(s.energy-=s.energyDecayRate,s.energy<s.stableEnergyLevel&&(s.energy=s.stableEnergyLevel))}load(e){if(!(e.nodes instanceof Array)||!(e.edges instanceof Array))throw new Error("Invalid data format. Expected an object with 'nodes' and 'edges' properties that are both arrays.");if(e.nodes.length==0)throw new Error("Invalid data format. Expected at least one node.");if(!e.nodes.every(n=>n instanceof Array))throw new Error("Invalid data format. Expected the all nodes to be key-value arrays.");if(!e.edges.every(n=>n instanceof Array))throw new Error("Invalid data format. Expected the all edges to be key-value arrays.");this.nodes.clear(),this.edges.clear();for(const[n,s]of e.nodes)this.nodes.set(n,{...this.defaultNodeData,...s});for(const[n,s]of e.edges)this.edges.set(n,s)}}class T{constructor({onNodeHovered:e}={}){this.edgeThickness=5,this.dragThreshold=5,this.scaleMin=.1,this.scaleMax=5,this.scaleFactorIncrease=1.01,this.scaleFactorDecrease=.99,this.pulseDuration=200,this.strokeStyleEdge=M,this.strokeStyleNormal=w,this.strokeStylePulse=I(m,.3),this.strokeStyleEdgeCreation=f,this.strokeWidthNormal=2,this.strokeWidthPulse=4,this.defaultEdgeStrength=1,this.arrowLength=15,this.arrowWidth=8,this.normalColor=w,this.strokeStyleIncomingEdge=m,this.strokeStyleOutgoingEdge=f,this.nodeNetwork=new A({}),this.selectedNode=null,this.draggingNode=null,this.edgeStartNode=null,this.offset={x:0,y:0},this.scale=1,this.isDragging=!1,this.dragStartPos=null,this.isPanning=!1,this.panStartPos=null,this.mouseDownInfo=null,this.lastHoveredNodeId=null,this.onNodeHovered=e,this.internalParameters={selfEdgeStartAngle:-2.807285748448284,selfEdgeEndAngle:1.7585218457865455},this.element=document.createElement("canvas"),this.ctx=this.element.getContext("2d"),this.resizeCanvas(),window.addEventListener("resize",()=>this.resizeCanvas()),this.element.addEventListener("mousedown",this.handleMouseDown.bind(this)),this.element.addEventListener("mousemove",this.handleMouseMove.bind(this)),this.element.addEventListener("mouseup",this.handleMouseUp.bind(this)),this.element.addEventListener("wheel",this.handleWheel.bind(this)),this.element.addEventListener("contextmenu",this.handleContextMenu.bind(this)),this.animate()}resizeCanvas(){const e=window.devicePixelRatio||1;this.element.width=window.innerWidth*e,this.element.height=window.innerHeight*e,this.element.style.width=window.innerWidth+"px",this.element.style.height=window.innerHeight+"px",this.ctx.scale(e,e)}handleMouseDown(e){const n=e.shiftKey,s=e.button===2,t=this.getMousePos(e),o=this.findNodeIdAtPosition(t),r=this.findEdgeAtPosition(t);if(this.mouseDownInfo={shiftWasPressed:n,isRightClick:s,pos:t,hoveredNodeId:o,hoveredEdgeId:r},!s)if(o)e.shiftKey?this.edgeStartNode===null?this.edgeStartNode=o:(this.nodeNetwork.newEdge({fromId:this.edgeStartNode,toId:o}),this.edgeStartNode=null):(this.draggingNode=o,this.isDragging=!1,this.dragStartPos=t);else if(r){const a=this.nodeNetwork.edges.get(r),l=parseFloat(globalThis.prompt(`Edge weight: ${a.strength}
Press okay to acknowledge, or enter replacement value`));l-0===l&&(a.strength=l)}else this.isPanning=!0,this.panStartPos={x:e.clientX,y:e.clientY}}handleMouseMove(e){const n=this.getMousePos(e),s=this.findNodeIdAtPosition(n);if(s!==this.lastHoveredNodeId&&(this.lastHoveredNodeId=s||this.lastHoveredNodeId,this.lastHoveredNodeId&&this.onNodeHovered)){const t=this.nodeNetwork.nodes.get(this.lastHoveredNodeId);t&&this.onNodeHovered(t)}if(this.draggingNode){if(!this.isDragging){const t=n.x-this.dragStartPos.x,o=n.y-this.dragStartPos.y;t*t+o*o>this.dragThreshold&&(this.isDragging=!0)}if(this.isDragging){const t=this.nodeNetwork.nodes.get(this.draggingNode);t.x=n.x,t.y=n.y}}else if(this.isPanning){const t=e.clientX-this.panStartPos.x,o=e.clientY-this.panStartPos.y;this.offset.x+=t,this.offset.y+=o,this.panStartPos={x:e.clientX,y:e.clientY},this.draw()}}handleMouseUp(e){const n=this.mouseDownInfo;if(this.mouseDownInfo=null,!this.isDragging&&n&&n.hoveredNodeId&&!n.shiftWasPressed){const t=n.hoveredNodeId;this.nodeNetwork.manuallySpike(t)}this.draggingNode=null,this.isDragging=!1,this.isPanning=!1,this.dragStartPos=null,this.panStartPos=null}handleWheel(e){e.preventDefault();const s=e.deltaY>0?this.scaleFactorDecrease:this.scaleFactorIncrease,t=window.devicePixelRatio||1,o=(this.element.width/2/t-this.offset.x)/this.scale,r=(this.element.height/2/t-this.offset.y)/this.scale;this.scale*=s,this.scale=Math.max(this.scaleMin,Math.min(this.scaleMax,this.scale)),this.offset.x=this.element.width/2/t-o*this.scale,this.offset.y=this.element.height/2/t-r*this.scale}handleContextMenu(e){e.preventDefault();const n=this.getMousePos(e);this.nodeNetwork.newNode({x:n.x,y:n.y,defaultNodeData:this.defaultNodeData})}getMousePos(e){const n=this.element.getBoundingClientRect();return{x:(e.clientX-n.left-this.offset.x)/this.scale,y:(e.clientY-n.top-this.offset.y)/this.scale}}findNodeIdAtPosition(e){for(const[n,s]of this.nodeNetwork.nodes){const t=e.x-s.x,o=e.y-s.y;if(t*t+o*o<=s.radius*s.radius)return n}return null}findEdgeAtPosition(e){const n=this.edgeThickness*1.3;for(const[s,t]of this.nodeNetwork.edges){const o=this.nodeNetwork.nodes.get(t.from),r=this.nodeNetwork.nodes.get(t.to);if(t.from===t.to){const a=this.nodeNetwork.nodes.get(t.from),l=a.x+a.radius,c=a.y-a.radius,g=a.radius,h=this.internalParameters.selfEdgeStartAngle,u=this.internalParameters.selfEdgeEndAngle,d=Math.atan2(e.y-c,e.x-l);if(d>=h&&d<=u){const v=Math.hypot(e.x-l,e.y-c);if(Math.abs(v-g)<n)return s}}else if(C(e,{x:o.x,y:o.y},{x:r.x,y:r.y})<n)return s}return null}draw(){if(this.ctx.clearRect(0,0,this.element.width,this.element.height),this.ctx.save(),this.ctx.translate(this.offset.x,this.offset.y),this.ctx.scale(this.scale,this.scale),this.lastHoveredNodeId)for(const e of this.nodeNetwork.edges.values()){const n=this.nodeNetwork.nodes.get(e.from),s=this.nodeNetwork.nodes.get(e.to);if(e.from===e.to){if(this.lastHoveredNodeId===e.from){this.ctx.beginPath();const t=this.nodeNetwork.nodes.get(e.from),[o,r]=[t.x+t.radius,t.y-t.radius];this.ctx.arc(o,r,t.radius,this.internalParameters.selfEdgeStartAngle,this.internalParameters.selfEdgeEndAngle),this.ctx.lineWidth=this.edgeThickness,this.ctx.strokeStyle=y(e.strength),this.ctx.stroke(),b({ctx:this.ctx,x:t.x+t.radius*.5,y:t.y-t.radius*1.55,angle:-.4+Math.PI*2,size:this.arrowLength,thickness:this.edgeThickness*.5,color:y(e.strength)})}}else if(e.from===this.lastHoveredNodeId||e.to===this.lastHoveredNodeId){this.ctx.beginPath(),this.ctx.moveTo(n.x,n.y),this.ctx.lineTo(s.x,s.y),this.ctx.strokeStyle=y(e.strength),this.ctx.lineWidth=this.edgeThickness,this.ctx.stroke();const t=Math.atan2(s.y-n.y,s.x-n.x),o=s.x-s.radius*1.1*Math.cos(t),r=s.y-s.radius*1.1*Math.sin(t);b({ctx:this.ctx,x:o,y:r,angle:t,size:this.arrowLength,thickness:this.edgeThickness,color:y(e.strength)})}}for(const[e,n]of this.nodeNetwork.nodes)this.ctx.beginPath(),this.ctx.arc(n.x,n.y,n.radius,0,Math.PI*2),this.ctx.fillStyle=n.color||k(n.energy),this.ctx.fill(),e===this.edgeStartNode?this.ctx.strokeStyle=this.strokeStyleEdgeCreation:n.pulse?(this.ctx.strokeStyle=this.strokeStylePulse,this.ctx.fillStyle=k(n.energy)):this.ctx.strokeStyle=this.strokeStyleNormal,this.ctx.lineWidth=n.pulse?this.strokeWidthPulse:this.strokeWidthNormal,this.ctx.stroke();this.ctx.restore()}animate(){this.draw(),requestAnimationFrame(()=>this.animate())}saveToJSON(){return JSON.stringify({nodes:Array.from(this.nodeNetwork.nodes.entries()),edges:Array.from(this.nodeNetwork.edges.entries())})}load(e){this.nodeNetwork.load(e)}next(){this.nodeNetwork.next(),this.draw()}}function p({...i}){const e=document.createElement("button");return e.style.padding="8px 16px",e.style.backgroundColor="#0066ff",e.style.color="white",e.style.border="none",e.style.borderRadius="4px",e.style.cursor="pointer",E(e,i),e}function L(i){const e=i.saveToJSON(),n=new Blob([e],{type:"application/json"}),s=URL.createObjectURL(n),t=document.createElement("a");t.href=s,t.download=`canvas-state-${new Date().toISOString().slice(0,19).replace(/:/g,"-")}.json`,document.body.appendChild(t),t.click(),document.body.removeChild(t),URL.revokeObjectURL(s)}function F(i){const e=document.createElement("input");e.type="file",e.accept="application/json",e.onchange=n=>{const s=n.target.files[0];if(s){const t=new FileReader;t.onload=o=>{const r=JSON.parse(o.target.result);i.load(r)},t.readAsText(s)}},e.click()}function R({onValueChange:i,numericInputs:e,children:n}){const s=document.createElement("div");s.style.position="fixed",s.style.left="-200px",s.style.top="0",s.style.width="200px",s.style.height="100%",s.style.backgroundColor="#f8f8f8",s.style.boxShadow="2px 0 5px rgba(0,0,0,0.3)",s.style.transition="left 0.3s ease",s.style.padding="20px",s.style.display="flex",s.style.flexDirection="column",s.style.alignItems="center";const t=document.createElement("div");t.textContent="⚙️",t.style.fontSize="24px",t.style.marginBottom="20px",t.style.position="absolute",t.style.right="10px",t.style.top="5px",s.appendChild(t),s.onmouseover=()=>{s.style.left="0"},s.onmouseout=()=>{s.style.left="-200px"};const o=({labelText:l,defaultValue:c,stepValue:g=1})=>{const h=document.createElement("div"),u=document.createElement("label");u.textContent=l;const d=document.createElement("input");return d.type="number",d.value=c,d.step=g,d.style.width="100%",d.style.marginBottom="10px",d.style.padding="5px",d.style.border="1px solid #ccc",d.style.borderRadius="4px",d.onchange=()=>i({labelText:l,value:d.value}),h.appendChild(u),h.appendChild(d),h};s.appendChild(x`<div height="2rem" padding-bottom="1rem">Settings</div>`);for(let l of e)s.appendChild(o(l));const r=`
        <strong>How do I use it?</strong>
        <ul>
            <li>Right click to add a neuron</li>
            <li>Click and drag to move a neuron around or pan around the canvas</li>
            <li>Scroll to zoom in and out</li>
            <li>Shift-click one neuron, then shift-click another neuron to create a connection between them.</li>
            <li>Click a connection to change its weight (it can be negative, expected values are between -1 and 1)</li>
            <li>Click a neuron to make it spike/fire</li>
            <li>Click the "Next" button to step the simulation forward one step and see the results</li>
            <li>You can make pretty advanced networks by saving, editing the JSON of the save file, and loading it back in</li>
        </ul>
    `,a=document.createElement("div");return a.style.marginTop="20px",a.style.padding="10px",a.style.backgroundColor="#f0f0f0",a.style.border="1px solid #ccc",a.style.borderRadius="4px",a.style.fontSize="12px",a.style.lineHeight="1.5",a.innerHTML=r,s.appendChild(a),s}window.addEventListener("load",()=>{const i=x`<div style="height: 5rem; overflow: auto;position: fixed; right: 0; bottom: 0; width: 200px; background: transparent;">[info area]</div>`,e=new T({onNodeHovered:s=>{i.innerHTML=`Node ID: ${s.id}<br>Energy: ${s.energy.toFixed(2)}<br>Energy Decay Rate: ${s.energyDecayRate}`}}),n=R({onValueChange:({labelText:s,value:t})=>{switch(s){case"Node Radius":e.nodeNetwork.defaultNodeData.radius=t-0,e.nodeNetwork.nodes.forEach(o=>o.radius=t-0);break;case"Energy Decay Rate":e.nodeNetwork.defaultNodeData.energyDecayRate=t-0,e.nodeNetwork.nodes.forEach(o=>o.energyDecayRate=t-0);break;case"Stable Energy Level":e.nodeNetwork.defaultNodeData.stableEnergyLevel=t-0,e.nodeNetwork.nodes.forEach(o=>o.stableEnergyLevel=t-0);break;case"Energy After Firing":e.nodeNetwork.defaultNodeData.energyAfterFiring=t-0,e.nodeNetwork.nodes.forEach(o=>o.energyAfterFiring=t-0);break}},numericInputs:[{labelText:"Node Radius",defaultValue:e.nodeNetwork.defaultNodeData.radius},{labelText:"Energy Decay Rate",defaultValue:e.nodeNetwork.defaultNodeData.energyDecayRate},{labelText:"Stable Energy Level",defaultValue:e.nodeNetwork.defaultNodeData.stableEnergyLevel,stepValue:.1},{labelText:"Energy After Firing",defaultValue:e.nodeNetwork.defaultNodeData.energyAfterFiring,stepValue:.1}]});document.body=x`<body style="margin: 0; overflow: hidden; background: #f0f0f0; font-family: Helvetica, Arial, sans-serif;">
        ${e.element}
        <div style="position: fixed; top: 20px; right: 20px; gap: 2rem; display: flex;">
            ${p({children:"Save",onClick:()=>L(e)})}
            ${p({children:"Load",onClick:()=>F(e)})}
            ${p({children:"Next",onClick:()=>e.next()})}
        </div>
        ${n}
        ${i}
    </body>`});
