import{passAlongProps as v,html as x}from"https://esm.sh/gh/jeff-hykin/elemental@0.6.5/main/deno.js";import{randomNormal as S}from"https://esm.sh/gh/jeff-hykin/good-js@42aa6e1/source/flattened/random_normal.js";import{showErrorToast as E}from"https://esm.sh/gh/jeff-hykin/good-component@0.3.5/main/actions/show_toast.js";(function(){let e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(let t of document.querySelectorAll('link[rel="modulepreload"]'))n(t);new MutationObserver(t=>{for(let i of t)if(i.type==="childList")for(let r of i.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&n(r)}).observe(document,{childList:!0,subtree:!0});function s(t){let i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(t){if(t.ep)return;t.ep=!0;let i=s(t);fetch(t.href,i)}})();const D={red:"#E06C75",blue:"#61AFEF",orange:"#D19A66",yellow:"#E5C07B",purple:"#C678DD",green:"#04d895",white:"#f5f5f5",black:"#383838",gray:"#666666"};function I(o,e){o=o.replace(/^#/,"");let s=parseInt(o.substring(0,2),16),n=parseInt(o.substring(2,4),16),t=parseInt(o.substring(4,6),16);return s=Math.min(255,Math.floor(s+(255-s)*e)),n=Math.min(255,Math.floor(n+(255-n)*e)),t=Math.min(255,Math.floor(t+(255-t)*e)),`#${((1<<24)+(s<<16)+(n<<8)+t).toString(16).slice(1).toUpperCase()}`}function N(o,e,s){o=o.replace(/^#/,""),e=e.replace(/^#/,"");const n=parseInt(o.substring(0,2),16),t=parseInt(o.substring(2,4),16),i=parseInt(o.substring(4,6),16),r=parseInt(e.substring(0,2),16),a=parseInt(e.substring(2,4),16),l=parseInt(e.substring(4,6),16),h=Math.round(n+s*(r-n)),g=Math.round(t+s*(a-t)),c=Math.round(i+s*(l-i));return`#${((1<<24)+(h<<16)+(g<<8)+c).toString(16).slice(1).toUpperCase()}`}class P{constructor({defaultNodeData:e={pulse:!1,spikeThreshold:1,energy:.1,energyDecayRate:.1,isFiringNext:!1,stableEnergyLevel:.1,energyAfterFiring:0,radius:25},defaultEdgeData:s={edgeStrength:1,strengthNoiseParameters:{mean:0,std:.1}}}){this.nodes=[],this.edges=[],this.defaultNodeData=e,this.defaultEdgeData=s,this.stateBuffer=[]}saveState(){const e={nodes:this.nodes.map(s=>({...s})),edges:this.edges.map(s=>({...s}))};this.stateBuffer.push(e),this.stateBuffer.length>100&&this.stateBuffer.shift()}back(){if(this.stateBuffer.length>0){const e=this.stateBuffer.pop();this.nodes=e.nodes,this.edges=e.edges}}newNode({x:e,y:s,...n}){const t=Date.now().toString();return this.nodes.push({x:e,y:s,id:t,...this.defaultNodeData,...n}),t}newEdge({fromId:e,toId:s,strength:n=1}){const t=`${e}-${s}`;return this.edges.push({id:`${e}-${s}`,from:e,to:s,strength:n,...this.defaultEdgeData}),t}manuallySpike(e){const s=this.nodes.find(n=>n.id===e);s&&(s.energy=s.spikeThreshold,s.isFiringNext=!0)}next(){this.saveState();const e={};for(let s of this.nodes)if(s.isFiringNext){for(const n of this.edges)if(n.from===s.id){const t=this.nodes.find(i=>i.id===n.to);if(t){e[t.id]=e[t.id]||0;let i=n.strength;if(n.strengthNoiseParameters){const r=S(n.strengthNoiseParameters);i+=r}e[t.id]+=i}}}for(let s of this.nodes)s.isFiringNext&&(s.energy=s.energyAfterFiring,s.isFiringNext=!1);for(const[s,n]of Object.entries(e)){const t=this.nodes.find(i=>i.id===s);t&&(t.energy+=n)}for(let s of this.nodes)s.energy>=s.spikeThreshold&&(s.isFiringNext=!0);for(let s of this.nodes)s.isFiringNext||(s.energy-=s.energyDecayRate,s.energy<s.stableEnergyLevel&&(s.energy=s.stableEnergyLevel))}load(e){if(!(e.nodes instanceof Array)||!(e.edges instanceof Array))throw new Error("Invalid data format. Expected an object with 'nodes' and 'edges' properties that are both arrays.");if(e.nodes.length==0)throw new Error("Invalid data format. Expected at least one node.");(e.nodes.some(i=>i instanceof Array)||e.edges.some(i=>i instanceof Array))&&e.nodes.every(i=>i instanceof Array)&&e.edges.every(i=>i instanceof Array)&&(e.nodes=e.nodes.map(i=>i[1]),e.edges=e.edges.map(i=>i[1]));const s=[],n=new Set,t=new Set;for(let i=0;i<e.nodes.length;i++){const r=e.nodes[i];n.has(r.id)?s.push(`Duplicate node ID '${r.id}' found at index ${i}`):n.add(r.id)}for(let i=0;i<e.edges.length;i++){const r=e.edges[i],a=`${r.from}-${r.to}`;t.has(a)?s.push(`Duplicate edge ID '${a}' found at index ${i}`):t.add(a)}this.nodes.length=0,this.edges.length=0;for(const i of e.nodes)this.nodes.push({...this.defaultNodeData,...i});for(const i of e.edges)this.edges.push(i);return s}}const{red:m,blue:u,orange:j,yellow:B,purple:O,green:M,white:Y,black:w,gray:C}=D;function k(o){const e=Math.max(0,Math.min(1,o/.9));return N(u,m,e)}function A(o,e,s){const n=(e.x-s.x)**2+(e.y-s.y)**2;if(n===0)return Math.hypot(o.x-e.x,o.y-e.y);let t=((o.x-e.x)*(s.x-e.x)+(o.y-e.y)*(s.y-e.y))/n;t=Math.max(0,Math.min(1,t));const i={x:e.x+t*(s.x-e.x),y:e.y+t*(s.y-e.y)};return Math.hypot(o.x-i.x,o.y-i.y)}function b({ctx:o,x:e,y:s,angle:n,size:t,thickness:i,color:r=w}){o.beginPath(),o.moveTo(e,s),o.lineTo(e-t*Math.cos(n-Math.PI/6),s-t*Math.sin(n-Math.PI/6)),o.lineTo(e-t*Math.cos(n+Math.PI/6),s-t*Math.sin(n+Math.PI/6)),o.lineTo(e,s),o.closePath(),o.strokeStyle=r,o.fillStyle=r,o.lineWidth=i,o.fill(),o.stroke()}function y(o){return o<-1?o=-1:o>1?o=1:o<=0?N(m,u,(o+1)**2/1):N(M,u,1-o)}class T{constructor({onNodeHovered:e,zoomSpeed:s=.03}={}){this.edgeThickness=5,this.dragThreshold=5,this.scaleMin=.1,this.scaleMax=5,this.scaleFactorIncrease=1+s,this.scaleFactorDecrease=1-s,this.pulseDuration=200,this.strokeStyleEdge=C,this.strokeStyleNormal=w,this.strokeStylePulse=I(m,.3),this.strokeStyleEdgeCreation=u,this.strokeWidthNormal=2,this.strokeWidthPulse=4,this.defaultEdgeStrength=1,this.arrowLength=15,this.arrowWidth=8,this.normalColor=w,this.strokeStyleIncomingEdge=m,this.strokeStyleOutgoingEdge=u,this.nodeNetwork=new P({}),this.selectedNode=null,this.draggingNode=null,this.edgeStartNode=null,this.offset={x:0,y:0},this.scale=1,this.isDragging=!1,this.dragStartPos=null,this.isPanning=!1,this.panStartPos=null,this.mouseDownInfo=null,this.lastHoveredNodeId=null,this.onNodeHovered=e,this.internalParameters={selfEdgeStartAngle:-2.807285748448284,selfEdgeEndAngle:1.7585218457865455},this.element=document.createElement("canvas"),this.ctx=this.element.getContext("2d"),this.resizeCanvas(),window.addEventListener("resize",()=>this.resizeCanvas()),this.element.addEventListener("mousedown",this.handleMouseDown.bind(this)),this.element.addEventListener("mousemove",this.handleMouseMove.bind(this)),this.element.addEventListener("mouseup",this.handleMouseUp.bind(this)),this.element.addEventListener("wheel",this.handleWheel.bind(this)),this.element.addEventListener("contextmenu",this.handleContextMenu.bind(this)),window.addEventListener("keydown",n=>{n.key==="n"&&this.next()}),this.animate()}resizeCanvas(){const e=window.devicePixelRatio||1;this.element.width=window.innerWidth*e,this.element.height=window.innerHeight*e,this.element.style.width=window.innerWidth+"px",this.element.style.height=window.innerHeight+"px",this.ctx.scale(e,e)}handleMouseDown(e){const s=e.shiftKey,n=e.button===2,t=this.getMousePos(e),i=this.findNodeIdAtPosition(t),r=this.findEdgeAtPosition(t);if(this.mouseDownInfo={shiftWasPressed:s,isRightClick:n,pos:t,hoveredNodeId:i,hoveredEdgeId:r},!n)if(i)e.shiftKey?this.edgeStartNode===null?this.edgeStartNode=i:(this.nodeNetwork.newEdge({fromId:this.edgeStartNode,toId:i}),this.edgeStartNode=null):(this.draggingNode=i,this.isDragging=!1,this.dragStartPos=t);else if(r){const a=this.nodeNetwork.edges.find(h=>h.from===r.split("-")[0]&&h.to===r.split("-")[1]),l=parseFloat(globalThis.prompt(`Edge weight: ${a.strength}
Press okay to acknowledge, or enter replacement value`));l-0===l&&(a.strength=l)}else this.isPanning=!0,this.panStartPos={x:e.clientX,y:e.clientY}}handleMouseMove(e){const s=this.getMousePos(e),n=this.findNodeIdAtPosition(s);if(n!==this.lastHoveredNodeId&&(this.lastHoveredNodeId=n||this.lastHoveredNodeId,this.lastHoveredNodeId&&this.onNodeHovered)){const t=this.nodeNetwork.nodes.find(i=>i.id===this.lastHoveredNodeId);t&&this.onNodeHovered(t)}if(this.draggingNode){if(!this.isDragging){const t=s.x-this.dragStartPos.x,i=s.y-this.dragStartPos.y;t*t+i*i>this.dragThreshold&&(this.isDragging=!0)}if(this.isDragging){const t=this.nodeNetwork.nodes.find(i=>i.id===this.draggingNode);t.x=s.x,t.y=s.y}}else if(this.isPanning){const t=e.clientX-this.panStartPos.x,i=e.clientY-this.panStartPos.y;this.offset.x+=t,this.offset.y+=i,this.panStartPos={x:e.clientX,y:e.clientY},this.draw()}}handleMouseUp(e){const s=this.mouseDownInfo;if(this.mouseDownInfo=null,!this.isDragging&&s&&s.hoveredNodeId&&!s.shiftWasPressed){const t=s.hoveredNodeId;this.nodeNetwork.manuallySpike(t)}this.draggingNode=null,this.isDragging=!1,this.isPanning=!1,this.dragStartPos=null,this.panStartPos=null}handleWheel(e){e.preventDefault();const n=e.deltaY>0?this.scaleFactorDecrease:this.scaleFactorIncrease,t=window.devicePixelRatio||1,i=(this.element.width/2/t-this.offset.x)/this.scale,r=(this.element.height/2/t-this.offset.y)/this.scale;this.scale*=n,this.scale=Math.max(this.scaleMin,Math.min(this.scaleMax,this.scale)),this.offset.x=this.element.width/2/t-i*this.scale,this.offset.y=this.element.height/2/t-r*this.scale}handleContextMenu(e){e.preventDefault();const s=this.getMousePos(e);this.nodeNetwork.newNode({x:s.x,y:s.y,defaultNodeData:this.defaultNodeData})}getMousePos(e){const s=this.element.getBoundingClientRect();return{x:(e.clientX-s.left-this.offset.x)/this.scale,y:(e.clientY-s.top-this.offset.y)/this.scale}}findNodeIdAtPosition(e){for(const s of this.nodeNetwork.nodes){const n=e.x-s.x,t=e.y-s.y;if(n*n+t*t<=s.radius*s.radius)return s.id}return null}findEdgeAtPosition(e){const s=this.edgeThickness*1.3;for(const n of this.nodeNetwork.edges){const t=this.nodeNetwork.nodes.find(r=>r.id===n.from),i=this.nodeNetwork.nodes.find(r=>r.id===n.to);if(n.from===this.lastHoveredNodeId||n.to===this.lastHoveredNodeId){if(n.from===n.to){const r=this.nodeNetwork.nodes.find(d=>d.id===n.from),a=r.x+r.radius,l=r.y-r.radius,h=r.radius,g=this.internalParameters.selfEdgeStartAngle,c=this.internalParameters.selfEdgeEndAngle,f=Math.atan2(e.y-l,e.x-a);if(f>=g&&f<=c){const d=Math.hypot(e.x-a,e.y-l);if(Math.abs(d-h)<s)return`${n.from}-${n.to}`}}else if(A(e,{x:t.x,y:t.y},{x:i.x,y:i.y})<s)return`${n.from}-${n.to}`}}return null}draw(){if(this.ctx.clearRect(0,0,this.element.width,this.element.height),this.ctx.save(),this.ctx.translate(this.offset.x,this.offset.y),this.ctx.scale(this.scale,this.scale),this.lastHoveredNodeId)for(const e of this.nodeNetwork.edges){const s=this.nodeNetwork.nodes.find(t=>t.id===e.from),n=this.nodeNetwork.nodes.find(t=>t.id===e.to);if(e.from===e.to){if(this.lastHoveredNodeId===e.from){this.ctx.beginPath();const t=this.nodeNetwork.nodes.find(a=>a.id===e.from),[i,r]=[t.x+t.radius,t.y-t.radius];this.ctx.arc(i,r,t.radius,this.internalParameters.selfEdgeStartAngle,this.internalParameters.selfEdgeEndAngle),this.ctx.lineWidth=this.edgeThickness,this.ctx.strokeStyle=y(e.strength),this.ctx.stroke(),b({ctx:this.ctx,x:t.x+t.radius*.5,y:t.y-t.radius*1.55,angle:-.4+Math.PI*2,size:this.arrowLength,thickness:this.edgeThickness*.5,color:y(e.strength)})}}else if(e.from===this.lastHoveredNodeId||e.to===this.lastHoveredNodeId){this.ctx.beginPath(),this.ctx.moveTo(s.x,s.y),this.ctx.lineTo(n.x,n.y),this.ctx.strokeStyle=y(e.strength),this.ctx.lineWidth=this.edgeThickness,this.ctx.stroke();const t=Math.atan2(n.y-s.y,n.x-s.x),i=n.x-n.radius*1.1*Math.cos(t),r=n.y-n.radius*1.1*Math.sin(t);b({ctx:this.ctx,x:i,y:r,angle:t,size:this.arrowLength,thickness:this.edgeThickness,color:y(e.strength)})}}for(const e of this.nodeNetwork.nodes)this.ctx.beginPath(),this.ctx.arc(e.x,e.y,e.radius,0,Math.PI*2),this.ctx.fillStyle=e.color||k(e.energy),this.ctx.fill(),e.id===this.edgeStartNode?this.ctx.strokeStyle=this.strokeStyleEdgeCreation:e.pulse?(this.ctx.strokeStyle=this.strokeStylePulse,this.ctx.fillStyle=k(e.energy)):this.ctx.strokeStyle=this.strokeStyleNormal,this.ctx.lineWidth=e.pulse?this.strokeWidthPulse:this.strokeWidthNormal,this.ctx.stroke();this.ctx.restore()}animate(){this.draw(),requestAnimationFrame(()=>this.animate())}saveToJSON(){return JSON.stringify({nodes:this.nodeNetwork.nodes.map(e=>({...e})),edges:this.nodeNetwork.edges.map(e=>({...e}))})}load(e){let s=[];try{const n=this.nodeNetwork.load(e)}catch(n){s=[(n==null?void 0:n.stack)||n.message]}for(let n of s)E(n),console.debug("data is:",e)}next(){this.nodeNetwork.next(),this.draw()}}function p({...o}){const e=document.createElement("button");return e.style.padding="8px 16px",e.style.backgroundColor="#0066ff",e.style.color="white",e.style.border="none",e.style.borderRadius="4px",e.style.cursor="pointer",v(e,o),e}function L(o){const e=o.saveToJSON(),s=new Blob([e],{type:"application/json"}),n=URL.createObjectURL(s),t=document.createElement("a");t.href=n,t.download=`canvas-state-${new Date().toISOString().slice(0,19).replace(/:/g,"-")}.json`,document.body.appendChild(t),t.click(),document.body.removeChild(t),URL.revokeObjectURL(n)}function $(o){const e=document.createElement("input");e.type="file",e.accept="application/json",e.onchange=s=>{const n=s.target.files[0];if(n){const t=new FileReader;t.onload=i=>{const r=JSON.parse(i.target.result);o.load(r)},t.readAsText(n)}},e.click()}function F({onValueChange:o,numericInputs:e,children:s}){const n=document.createElement("div");n.style.position="fixed",n.style.left="-200px",n.style.top="0",n.style.width="200px",n.style.height="100%",n.style.backgroundColor="#f8f8f8",n.style.boxShadow="2px 0 5px rgba(0,0,0,0.3)",n.style.transition="left 0.3s ease",n.style.padding="20px",n.style.display="flex",n.style.flexDirection="column",n.style.alignItems="center";const t=document.createElement("div");t.textContent="⚙️",t.style.fontSize="24px",t.style.marginBottom="20px",t.style.position="absolute",t.style.right="10px",t.style.top="5px",n.appendChild(t),n.onmouseover=()=>{n.style.left="0"},n.onmouseout=()=>{n.style.left="-200px"};const i=({labelText:l,defaultValue:h,stepValue:g=1})=>{const c=document.createElement("div"),f=document.createElement("label");f.textContent=l;const d=document.createElement("input");return d.type="number",d.value=h,d.step=g,d.style.width="100%",d.style.marginBottom="10px",d.style.padding="5px",d.style.border="1px solid #ccc",d.style.borderRadius="4px",d.onchange=()=>o({labelText:l,value:d.value}),c.appendChild(f),c.appendChild(d),c};n.appendChild(x`<div height="2rem" padding-bottom="1rem">Settings</div>`);for(let l of e)n.appendChild(i(l));const r=`
        <strong>How do I use it?</strong>
        <ul>
            <li>Right click to add a neuron</li>
            <li>Click and drag to move a neuron around or pan around the canvas</li>
            <li>Scroll to zoom in and out</li>
            <li>Shift-click one neuron, then shift-click another neuron to create a connection between them.</li>
            <li>Click a connection to change its weight (it can be negative, expected values are between -1 and 1)</li>
            <li>Click a neuron to make it spike/fire</li>
            <li>Click the "Next" button to step the simulation forward one step and see the results</li>
            <li>You can make pretty advanced networks by saving, editing the JSON of the save file, and loading it back in</li>
        </ul>
    `,a=document.createElement("div");return a.style.marginTop="20px",a.style.padding="10px",a.style.backgroundColor="#f0f0f0",a.style.border="1px solid #ccc",a.style.borderRadius="4px",a.style.fontSize="12px",a.style.lineHeight="1.5",a.innerHTML=r,n.appendChild(a),n}window.addEventListener("load",()=>{const o=x`<div style="height: 5rem; overflow: auto;position: fixed; right: 0; bottom: 0; width: 200px; background: transparent;">[info area]</div>`,e=new T({onNodeHovered:n=>{o.innerHTML=`Node ID: ${n.id}<br>Energy: ${n.energy.toFixed(2)}<br>Energy Decay Rate: ${n.energyDecayRate}`}}),s=F({onValueChange:({labelText:n,value:t})=>{switch(n){case"Node Radius":e.nodeNetwork.defaultNodeData.radius=t-0,e.nodeNetwork.nodes.forEach(i=>i.radius=t-0);break;case"Energy Decay Rate":e.nodeNetwork.defaultNodeData.energyDecayRate=t-0,e.nodeNetwork.nodes.forEach(i=>i.energyDecayRate=t-0);break;case"Stable Energy Level":e.nodeNetwork.defaultNodeData.stableEnergyLevel=t-0,e.nodeNetwork.nodes.forEach(i=>i.stableEnergyLevel=t-0);break;case"Energy After Firing":e.nodeNetwork.defaultNodeData.energyAfterFiring=t-0,e.nodeNetwork.nodes.forEach(i=>i.energyAfterFiring=t-0);break}},numericInputs:[{labelText:"Node Radius",defaultValue:e.nodeNetwork.defaultNodeData.radius},{labelText:"Energy Decay Rate",defaultValue:e.nodeNetwork.defaultNodeData.energyDecayRate},{labelText:"Stable Energy Level",defaultValue:e.nodeNetwork.defaultNodeData.stableEnergyLevel,stepValue:.1},{labelText:"Energy After Firing",defaultValue:e.nodeNetwork.defaultNodeData.energyAfterFiring,stepValue:.1}]});document.body=x`<body style="margin: 0; overflow: hidden; background: #f0f0f0; font-family: Helvetica, Arial, sans-serif;">
        ${e.element}
        <div style="position: fixed; top: 20px; right: 20px; gap: 2rem; display: flex;">
            ${p({children:"Save",onClick:()=>L(e)})}
            ${p({children:"Load",onClick:()=>$(e)})}
            ${p({children:"Back",onClick:()=>{e.nodeNetwork.back(),e.draw()}})}
            ${p({children:"Next",onClick:()=>e.next()})}
        </div>
        ${s}
        ${o}
    </body>`});
